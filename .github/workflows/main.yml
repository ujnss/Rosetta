name: CI-test-trvais

on:
  push:
    branches: [test-trvais]
  pull_request:
    branches: [test-trvais]

  workflow_dispatch:

defaults:
  run:
    working-directory: ./

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        env:
          - ROSETTA_COMPILE_OPTIONS: "--enable-protocol-mpc-securenn"
          - ROSETTA_COMPILE_OPTIONS: "--enable-protocol-mpc-securenn --enable-128bit"
          - ROSETTA_COMPILE_OPTIONS: "--enable-protocol-mpc-helix"
          - ROSETTA_COMPILE_OPTIONS: "--enable-protocol-mpc-helix --enable-128bit"
          - ROSETTA_COMPILE_OPTIONS: "--enable-protocol-mpc-securenn --enable-protocol-mpc-helix"
          - ROSETTA_COMPILE_OPTIONS: "--enable-protocol-mpc-securenn --enable-protocol-mpc-helix --enable-128bit"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install basic dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install g++ cmake make automake
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow==1.14.0 sklearn matplotlib
      - name: List versions
        run: uname -a && gcc --version && cmake --version && python --version && python3 --version && pip --version && pip list
      - name: Before compile
        run: ./rosetta.sh clean
      - name: Compile
        run: ./rosetta.sh compile $ROSETTA_COMPILE_OPTIONS --enable-tests
      - name: Install
        run: ./rosetta.sh install
      - name: Tests & examples
        run: ./rosetta.sh test all
      - name: Tutorials
        run: cd ./example/tutorials/code && bash ./tutorials.sh all
